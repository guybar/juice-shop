name: guy-juice-shop-build
on: workflow_dispatch
permissions:
  actions: read # for detecting the Github Actions environment.
  id-token: write # for creating OIDC tokens for signing.
  packages: write # for uploading attestations.
  contents: read
  
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      JF_PROJECT: ${{ vars.JF_PROJECT_KEY }}
      JF_URL: ${{ vars.JF_URL }}
      # JFROG_CLI_LOG_LEVEL: DEBUG
      DOCKER_IMAGE_NAME: ${{ vars.JF_DOCKER_REPOSITORY }}juice-shop:1.0.${{github.run_number}}

    steps:
      # This action checks out the code from the repository
      - name: Checkout Code
        uses: actions/checkout@v4
          
      # Download the JFrog CLI and configure using JFrog Project and OIDC provider 
      - uses: jfrog/setup-jfrog-cli@v4
        name: Setup JFrog CLI
        id: setup-cli
        with:
          version: latest
          oidc-provider-name: guy-github
      
      # Configure JFrog CLI for NPM 
      - name: Configure NPM
        run: |
          jf npmc --repo-deploy=guy-npm-dev --repo-resolve=guy-npm-dev 
      # Curation audit
      - name: Curate dependencies
        run: |
          jf curation-audit 
      - name: Install npm dependencies
        run: |
          npm install
          jf npm install --legacy-peer-deps
      # Scan code
      - name: Scan code
        run: |
          jf audit 
      # Using NPM Publish to uplaod the NPM Build 
      - name: Build & Publish npm package
        run: |
          jf npm publish 
      # Scan npm package
      - name: Scan npm package
        run: |
          jf scan juice-shop/
      # Build and Push docker image
      - name: Docker build and push 
        run: |
          docker build -t $DOCKER_IMAGE_NAME .
          jf docker push $DOCKER_IMAGE_NAME
      # Scan docker image
      - name: Scan docker
        run: |
          jf docker scan $DOCKER_IMAGE_NAME 
      # Scan the NPM Build with Xray 
      - name: Scan build
        run: |
          jf rt build-publish
          jf build-scan 
